////////////////////////////////////////////////////////////////////////////////////////////////////
// NoesisGUI - http://www.noesisengine.com
// Copyright (c) 2013 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


#include <NsCore/Package.h>
#include <NsRender/GLFactory.h>
#include <NsRender/Texture.h>

#include "GLRenderDevice.h"


using namespace Noesis;
using namespace NoesisApp;


////////////////////////////////////////////////////////////////////////////////////////////////////
Ptr<RenderDevice> GLFactory::CreateDevice(bool sRGB)
{
    return *new GLRenderDevice(sRGB);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Ptr<Texture> GLFactory::WrapTexture(GLuint object, uint32_t width, uint32_t height, uint32_t levels,
    bool isInverted, bool hasAlpha)
{
    return GLRenderDevice::WrapTexture(object, width, height, levels, isInverted, hasAlpha);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void* GLFactory::CreatePixelShader(RenderDevice* device_, const char* label, uint8_t shader,
    const char* glsl)
{
    GLRenderDevice* device = (GLRenderDevice*)device_;
    return device->CreatePixelShader(label, shader, glsl);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
void GLFactory::ClearPixelShaders(RenderDevice* device_)
{
    GLRenderDevice* device = (GLRenderDevice*)device_;
    device->ClearPixelShaders();
}

NS_BEGIN_COLD_REGION

////////////////////////////////////////////////////////////////////////////////////////////////////
NS_REGISTER_REFLECTION(Render, GLRenderDevice)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
NS_INIT_PACKAGE(Render, GLRenderDevice)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
NS_SHUTDOWN_PACKAGE(Render, GLRenderDevice)
{
}

NS_END_COLD_REGION
